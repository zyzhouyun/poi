<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--注解扫描(基本配置)-->
    <context:component-scan base-package="handler"></context:component-scan><!--#-->

    <!--指定配置静态资源访问,进行区分；防止被前端控制器拦截请求-->
<!--<mvc:resources mapping="/statics/**" location="/statics/"/>-->

    <!--通用访问静态资源，@requestMapping没有的请求，交给tomcat web.xml配置的默认servlet处理-->
   <mvc:default-servlet-handler/>


    <!--1, 自定义转换器-->


    <!--mvc注解驱动(基本配置)
        3, 注解驱动的conver-service属性可将conversionService bean注入,完成自定义转换器配置
    -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- @ResponseBody乱码问题，将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" index="0"/>
            </bean>
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="charset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>QuoteFieldNames</value>
                        <value>WriteMapNullValue</value>
                        <value>WriteDateUseDateFormat</value>
                        <value>WriteEnumUsingToString</value>
                        <value>DisableCircularReferenceDetect</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--文件上传 此类id是mvc规定的；需要引入commons-fileupload, io jar包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!--上传的单个文件大小；value="-1":无限大小；单位Byte -->
        <property name="maxUploadSize" value="-1"/>
    </bean>


    <!--拦截器-->
 <!--   <mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash;指定拦截的请求&ndash;&gt;
            <mvc:mapping path="/**"/>
            &lt;!&ndash;不拦截静态资源请求&ndash;&gt;
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/static/**" />
            &lt;!&ndash;指定自定义拦截器类，来拦截这些请求&ndash;&gt;
            <bean class="interceptor.CustomInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>-->


    <!--视图解析器(基本配置)
    前后缀简化：modelAndView.setViewName("jspUrl");
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置视图前后缀-->
        <property name="prefix" value="/view/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

</beans>