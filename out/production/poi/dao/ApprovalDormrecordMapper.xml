<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ApprovalDormrecordMapper">
  <resultMap id="BaseResultMap" type="pojo.ApprovalDormrecord">
    <id column="aid" jdbcType="INTEGER" property="aid" />
    <result column="aname" jdbcType="VARCHAR" property="aname" />
    <result column="block" jdbcType="INTEGER" property="block" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="berth" jdbcType="VARCHAR" property="berth" />
    <result column="lname" jdbcType="VARCHAR" property="lname" />
    <result column="lblock" jdbcType="INTEGER" property="lblock" />
    <result column="lfloor" jdbcType="INTEGER" property="lfloor" />
    <result column="lroom" jdbcType="VARCHAR" property="lroom" />
    <result column="lberth" jdbcType="VARCHAR" property="lberth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aid, aname, block, floor, room, berth, lname, lblock, lfloor, lroom, lberth
  </sql>
  <select id="selectByExample" parameterType="pojo.ApprovalDormrecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from approvaldormrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from approvaldormrecord
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from approvaldormrecord
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.ApprovalDormrecordExample">
    delete from approvaldormrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.ApprovalDormrecord">
    insert into approvaldormrecord (aid, aname, block, 
      floor, room, berth, 
      lname, lblock, lfloor, 
      lroom, lberth)
    values (#{aid,jdbcType=INTEGER}, #{aname,jdbcType=VARCHAR}, #{block,jdbcType=INTEGER}, 
      #{floor,jdbcType=INTEGER}, #{room,jdbcType=VARCHAR}, #{berth,jdbcType=VARCHAR}, 
      #{lname,jdbcType=VARCHAR}, #{lblock,jdbcType=INTEGER}, #{lfloor,jdbcType=INTEGER}, 
      #{lroom,jdbcType=VARCHAR}, #{lberth,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.ApprovalDormrecord">
    insert into approvaldormrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="aname != null">
        aname,
      </if>
      <if test="block != null">
        block,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="berth != null">
        berth,
      </if>
      <if test="lname != null">
        lname,
      </if>
      <if test="lblock != null">
        lblock,
      </if>
      <if test="lfloor != null">
        lfloor,
      </if>
      <if test="lroom != null">
        lroom,
      </if>
      <if test="lberth != null">
        lberth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="aname != null">
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        #{block,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        #{room,jdbcType=VARCHAR},
      </if>
      <if test="berth != null">
        #{berth,jdbcType=VARCHAR},
      </if>
      <if test="lname != null">
        #{lname,jdbcType=VARCHAR},
      </if>
      <if test="lblock != null">
        #{lblock,jdbcType=INTEGER},
      </if>
      <if test="lfloor != null">
        #{lfloor,jdbcType=INTEGER},
      </if>
      <if test="lroom != null">
        #{lroom,jdbcType=VARCHAR},
      </if>
      <if test="lberth != null">
        #{lberth,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.ApprovalDormrecordExample" resultType="java.lang.Long">
    select count(*) from approvaldormrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update approvaldormrecord
    <set>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.aname != null">
        aname = #{record.aname,jdbcType=VARCHAR},
      </if>
      <if test="record.block != null">
        block = #{record.block,jdbcType=INTEGER},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=VARCHAR},
      </if>
      <if test="record.berth != null">
        berth = #{record.berth,jdbcType=VARCHAR},
      </if>
      <if test="record.lname != null">
        lname = #{record.lname,jdbcType=VARCHAR},
      </if>
      <if test="record.lblock != null">
        lblock = #{record.lblock,jdbcType=INTEGER},
      </if>
      <if test="record.lfloor != null">
        lfloor = #{record.lfloor,jdbcType=INTEGER},
      </if>
      <if test="record.lroom != null">
        lroom = #{record.lroom,jdbcType=VARCHAR},
      </if>
      <if test="record.lberth != null">
        lberth = #{record.lberth,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update approvaldormrecord
    set aid = #{record.aid,jdbcType=INTEGER},
      aname = #{record.aname,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=INTEGER},
      floor = #{record.floor,jdbcType=INTEGER},
      room = #{record.room,jdbcType=VARCHAR},
      berth = #{record.berth,jdbcType=VARCHAR},
      lname = #{record.lname,jdbcType=VARCHAR},
      lblock = #{record.lblock,jdbcType=INTEGER},
      lfloor = #{record.lfloor,jdbcType=INTEGER},
      lroom = #{record.lroom,jdbcType=VARCHAR},
      lberth = #{record.lberth,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.ApprovalDormrecord">
    update approvaldormrecord
    <set>
      <if test="aname != null">
        aname = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        block = #{block,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=VARCHAR},
      </if>
      <if test="berth != null">
        berth = #{berth,jdbcType=VARCHAR},
      </if>
      <if test="lname != null">
        lname = #{lname,jdbcType=VARCHAR},
      </if>
      <if test="lblock != null">
        lblock = #{lblock,jdbcType=INTEGER},
      </if>
      <if test="lfloor != null">
        lfloor = #{lfloor,jdbcType=INTEGER},
      </if>
      <if test="lroom != null">
        lroom = #{lroom,jdbcType=VARCHAR},
      </if>
      <if test="lberth != null">
        lberth = #{lberth,jdbcType=VARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.ApprovalDormrecord">
    update approvaldormrecord
    set aname = #{aname,jdbcType=VARCHAR},
      block = #{block,jdbcType=INTEGER},
      floor = #{floor,jdbcType=INTEGER},
      room = #{room,jdbcType=VARCHAR},
      berth = #{berth,jdbcType=VARCHAR},
      lname = #{lname,jdbcType=VARCHAR},
      lblock = #{lblock,jdbcType=INTEGER},
      lfloor = #{lfloor,jdbcType=INTEGER},
      lroom = #{lroom,jdbcType=VARCHAR},
      lberth = #{lberth,jdbcType=VARCHAR}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>